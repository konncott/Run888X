local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- üü© ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï toggle ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß/‡πÄ‡∏ó‡∏≤
local function updateToggle(toggleBtn, circle, state)
	if state then
		toggleBtn.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
		circle:TweenPosition(UDim2.new(0.5, 2, 0, 2), "Out", "Quad", 0.2, true)
	else
		toggleBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
		circle:TweenPosition(UDim2.new(0, 2, 0, 2), "Out", "Quad", 0.2, true)
	end
end

-- üñ•Ô∏è UI
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "SpeedHack_UI"

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 320, 0, 240)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local function createTextBtn(txt, parent, pos, bg)
	local btn = Instance.new("TextButton", parent)
	btn.Size = UDim2.new(0, 25, 0, 25)
	btn.Position = pos
	btn.Text = txt
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 20
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BackgroundColor3 = bg
	Instance.new("UICorner", btn).CornerRadius = UDim.new(1, 0)
	return btn
end

local closeButton = createTextBtn("x", frame, UDim2.new(1, -32, 0, 8), Color3.fromRGB(255, 50, 50))
local minimizeButton = createTextBtn("-", frame, UDim2.new(1, -64, 0, 8), Color3.fromRGB(100, 100, 255))

closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)

local title = Instance.new("TextLabel", frame)
title.Text = "‚ö° SpeedHack & Noclip"
title.Size = UDim2.new(1, -40, 0, 30)
title.Position = UDim2.new(0, 16, 0, 12)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Left

-- üõ†Ô∏è ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£
local speedEnabled, noclipEnabled = false, false
local speedMultiplier = 11
local hotkey, noclipHotkey = Enum.KeyCode.F, Enum.KeyCode.G
local speedConnection, noclipConnection

-- ‚úÖ Create toggle
local function createToggle(y, text, state, callback)
	local label = Instance.new("TextLabel", frame)
	label.Text = text
	label.Position = UDim2.new(0, 16, 0, y)
	label.Size = UDim2.new(0.7, 0, 0, 24)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(200, 200, 200)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14
	label.TextXAlignment = Enum.TextXAlignment.Left

	local toggle = Instance.new("TextButton", frame)
	toggle.Position = UDim2.new(1, -60, 0, y)
	toggle.Size = UDim2.new(0, 40, 0, 24)
	toggle.BackgroundColor3 = state and Color3.fromRGB(46, 204, 113) or Color3.fromRGB(100, 100, 100)
	toggle.Text = ""
	toggle.BorderSizePixel = 0
	Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 0)

	local circle = Instance.new("Frame", toggle)
	circle.Size = UDim2.new(0.5, -4, 1, -4)
	circle.Position = state and UDim2.new(0.5, 2, 0, 2) or UDim2.new(0, 2, 0, 2)
	circle.BackgroundColor3 = Color3.new(1, 1, 1)
	circle.BorderSizePixel = 0
	Instance.new("UICorner", circle).CornerRadius = UDim.new(1, 0)

	toggle.MouseButton1Click:Connect(function()
		state = not state
		updateToggle(toggle, circle, state)
		callback(state)
	end)

	return {Label = label, Button = toggle, Circle = circle}
end

-- üîÅ Toggle SpeedHack
local speedToggle = createToggle(45, "‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î SpeedHack", false, function(state)
	speedEnabled = state
	if state then
		speedConnection = RunService.Heartbeat:Connect(function(dt)
			if player.Character and player.Character:FindFirstChild("Humanoid") then
				if player.Character.Humanoid.MoveDirection.Magnitude > 0 then
					player.Character:TranslateBy(player.Character.Humanoid.MoveDirection * speedMultiplier * dt * 10)
				end
			end
		end)
	elseif speedConnection then speedConnection:Disconnect() speedConnection = nil end
end)

-- üéöÔ∏è Slider
local sliderLabel = Instance.new("TextLabel", frame)
sliderLabel.Text = "‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ Speed"
sliderLabel.Position = UDim2.new(0, 16, 0, 75)
sliderLabel.Size = UDim2.new(1, -32, 0, 20)
sliderLabel.BackgroundTransparency = 1
sliderLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
sliderLabel.Font = Enum.Font.Gotham
sliderLabel.TextSize = 14
sliderLabel.TextXAlignment = Enum.TextXAlignment.Left

local sliderBar = Instance.new("Frame", frame)
sliderBar.Position = UDim2.new(0, 16, 0, 95)
sliderBar.Size = UDim2.new(1, -32, 0, 8)
sliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
Instance.new("UICorner", sliderBar).CornerRadius = UDim.new(0, 4)

local sliderFill = Instance.new("Frame", sliderBar)
sliderFill.Size = UDim2.new((speedMultiplier - 1) / 15, 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(46, 204, 113)
Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(0, 4)

local sliderKnob = Instance.new("TextButton", sliderBar)
sliderKnob.Size = UDim2.new(0, 14, 2, 0)
sliderKnob.Position = UDim2.new((speedMultiplier - 1)/15, -7, -0.5, 0)
sliderKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sliderKnob.Text = ""
Instance.new("UICorner", sliderKnob).CornerRadius = UDim.new(1, 0)

local valueLabel = Instance.new("TextLabel", frame)
valueLabel.Text = tostring(speedMultiplier)
valueLabel.Position = UDim2.new(0, 16, 0, 110)
valueLabel.Size = UDim2.new(1, -32, 0, 20)
valueLabel.BackgroundTransparency = 1
valueLabel.TextColor3 = Color3.new(1, 1, 1)
valueLabel.Font = Enum.Font.GothamBold
valueLabel.TextSize = 16
valueLabel.TextXAlignment = Enum.TextXAlignment.Left

local dragging = false
sliderKnob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
end)
UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local rel = (input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X
		rel = math.clamp(rel, 0, 1)
		local val = math.floor(1 + rel * 15 + 0.5)
		speedMultiplier = val
		sliderFill.Size = UDim2.new((val - 1)/15, 0, 1, 0)
		sliderKnob.Position = UDim2.new((val - 1)/15, -7, -0.5, 0)
		valueLabel.Text = tostring(val)
	end
end)

-- üîÅ Toggle Noclip
local noclipToggle = createToggle(135, "‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î Noclip", false, function(state)
	noclipEnabled = state
	if state then
		noclipConnection = RunService.Stepped:Connect(function()
			pcall(function()
				for _, part in pairs(player.Character:GetDescendants()) do
					if part:IsA("BasePart") then part.CanCollide = false end
				end
			end)
		end)
	elseif noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
end)

-- ‚å®Ô∏è Keybind
local function createKeybind(labelText, y, defaultKey, onSet)
	local label = Instance.new("TextLabel", frame)
	label.Text = labelText
	label.Position = UDim2.new(0, 16, 0, y)
	label.Size = UDim2.new(0, 120, 0, 20)
	label.BackgroundTransparency = 1
	label.TextColor3 = Color3.fromRGB(200, 200, 200)
	label.Font = Enum.Font.Gotham
	label.TextSize = 14

	local box = Instance.new("TextBox", frame)
	box.Position = UDim2.new(0, 140, 0, y - 2)
	box.Size = UDim2.new(0, 50, 0, 24)
	box.Text = defaultKey.Name
	box.ClearTextOnFocus = false
	box.TextColor3 = Color3.new(1, 1, 1)
	box.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Instance.new("UICorner", box).CornerRadius = UDim.new(0, 4)

	local btn = Instance.new("TextButton", frame)
	btn.Position = UDim2.new(0, 200, 0, y - 2)
	btn.Size = UDim2.new(0, 50, 0, 24)
	btn.Text = "Set"
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.BackgroundColor3 = Color3.fromRGB(50, 150, 255)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 4)

	btn.MouseButton1Click:Connect(function()
		local keyText = box.Text:upper()
		local code = Enum.KeyCode[keyText]
		if code then onSet(code) box.Text = keyText else box.Text = defaultKey.Name end
	end)
end

createKeybind("‡∏Ñ‡∏µ‡∏¢‡πå‡∏•‡∏±‡∏î SpeedHack:", 165, hotkey, function(k) hotkey = k end)
createKeybind("‡∏Ñ‡∏µ‡∏¢‡πå‡∏•‡∏±‡∏î Noclip:", 192, noclipHotkey, function(k) noclipHotkey = k end)

-- üéß Keybind Toggle
UserInputService.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == hotkey then
		speedEnabled = not speedEnabled
		if speedEnabled then
			speedConnection = RunService.Heartbeat:Connect(function(dt)
				if player.Character and player.Character:FindFirstChild("Humanoid") then
					if player.Character.Humanoid.MoveDirection.Magnitude > 0 then
						player.Character:TranslateBy(player.Character.Humanoid.MoveDirection * speedMultiplier * dt * 10)
					end
				end
			end)
		elseif speedConnection then speedConnection:Disconnect() speedConnection = nil end
		updateToggle(speedToggle.Button, speedToggle.Circle, speedEnabled)
	elseif input.KeyCode == noclipHotkey then
		noclipEnabled = not noclipEnabled
		if noclipEnabled then
			noclipConnection = RunService.Stepped:Connect(function()
				pcall(function()
					for _, part in pairs(player.Character:GetDescendants()) do
						if part:IsA("BasePart") then part.CanCollide = false end
					end
				end)
			end)
		elseif noclipConnection then noclipConnection:Disconnect() noclipConnection = nil end
		updateToggle(noclipToggle.Button, noclipToggle.Circle, noclipEnabled)
	end
end)

-- üß∫ ‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
local elementsToToggle = {
	sliderLabel, sliderBar, sliderFill, sliderKnob, valueLabel,
	speedToggle.Label, speedToggle.Button, speedToggle.Circle,
	noclipToggle.Label, noclipToggle.Button, noclipToggle.Circle,
}

for _, v in pairs(frame:GetChildren()) do
	if v:IsA("TextLabel") or v:IsA("TextBox") or v:IsA("TextButton") then
		if v ~= title and v ~= closeButton and v ~= minimizeButton then
			table.insert(elementsToToggle, v)
		end
	end
end

-- üì¶ ‡∏û‡∏±‡∏ö UI
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	TweenService:Create(frame, TweenInfo.new(0.3), {
		Size = isMinimized and UDim2.new(0, 320, 0, 50) or UDim2.new(0, 320, 0, 240)
	}):Play()

	for _, obj in elementsToToggle do
		if obj then obj.Visible = not isMinimized end
	end

	minimizeButton.Text = isMinimized and "+" or "-"
end)

